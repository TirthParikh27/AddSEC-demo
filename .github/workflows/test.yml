Skip to content
Search or jump toâ€¦

Pull requests
Issues
Marketplace
Explore
 
@ChinmayManchanda 
TirthParikh27
/
AddSEC-demo
1
0
0
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Update aws.yml Deploy to Amazon ECS #36
Summary
Workflow file
Jobs
deploy
Workflow file for this run
.github/workflows/aws.yml at 5102ec0
on:
  push:
    branches:
      - main

name: Deploy to Amazon ECS
jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

#       - name: Build, tag, and push image to Amazon ECR
#         id: build-image
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: my-ecr-repo
#           IMAGE_TAG: latest
#         run: |
#           # Build a docker container and
#           # push it to ECR so that it can
#           # be deployed to ECS.
#           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#           echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

#       - name: Fill in the new image ID in the Amazon ECS task definition
#         id: task-def
#         uses: aws-actions/amazon-ecs-render-task-definition@v1
#         with:
#           task-definition: task-def.json
#           container-name: flask-app
#           image: ${{ steps.build-image.outputs.image }}

#       - name: Deploy Amazon ECS task definition
#         uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#         with:
#           task-definition: ${{ steps.task-def.outputs.task-definition }}
#           service: flask-app
#           cluster: flask-app
#           wait-for-service-stability: false
      - run: echo "Test file " > test.txt
      - name: Upload to slack step
        uses: adrey/slack-file-upload-action@master
        with:
          token: xoxb-2113526336947-2221428155491-0kWEVhsLDHd1LOxkAwAMWXkN
          path: test.txt
          channel: aws-chat-test
